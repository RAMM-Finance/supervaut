@import (reference) "~assets/styles/shared";

.TopNav {
  align-items: center;
  background: var(--inverted-primary-bg);
  display: flex;
  flex-flow: row wrap;
  justify-content: center;
  height: var(--theme-top-bar-height);
  min-height: var(--theme-top-bar-height);
  max-height: var(--theme-top-bar-height);
  width: 100vw;
  position: fixed;
  z-index: @above-all-content;
  box-sizing: content-box;

  > article:not([class*="Toast"]) {
    display: none;
    flex-flow: row nowrap;
    align-items: center;
    box-sizing: border-box;
    flex: 1 100%;
    width: 100vw;
    height: @size-48;
    min-height: @size-48;
    max-height: @size-48;
    position: relative;
  }

  > article[class*="Toast"] {
    .SecondaryBorderRadius;

    right: @size-32;
  }

  > section {
    align-items: center;
    background: var(--inverted-primary-bg);
    border-color: var(--secondary-text);
    box-sizing: border-box;
    display: inline-grid;
    grid-template-columns: auto auto;
    flex: 1;
    grid-gap: @size-16;
    width: 100%;
    height: var(--theme-top-bar-height);
    min-height: var(--theme-top-bar-height);
    max-height: var(--theme-top-bar-height);

    &:first-of-type {
      max-width: @size-912;
      padding-left: var(--theme-gutter);
      grid-template-columns: 0fr 1fr;
      grid-gap: @size-80;

      > a:first-of-type > section {
        height: @size-32;
        width: @size-96;

        > svg > g > path:not(:first-of-type) {
          fill: var(--inverted-primary-text);
        }
      }

      @media @breakpoint-mobile-tablet {
        grid-template-columns: auto;
        grid-gap: 0;
      }

      > ol {
        align-items: center;
        list-style: none;
        display: flex;
        flex-flow: row nowrap;
        margin: 0;
        padding: 0;

        > li {
          flex: 0 auto;
          margin-right: @size-40;
          display: flex;
          flex-flow: column nowrap;
          height: 100%;
          min-height: 100%;
          align-items: center;
          justify-content: center;

          &:last-of-type {
            margin-right: 0;
          }

          > a {
            .text-16-bold;

            text-transform: uppercase;
            color: var(--tertiary-text);
            white-space: nowrap;
            height: 100%;
            display: flex;
            align-items: center;
          }

          &:hover {
            > a {
              color: var(--inverted-primary-text);

              &[disabled] {
                color: var(--secondary-text);
              }
            }
          }

          &.Active,
          &.Active:hover {
            > a {
              color: var(--inverted-primary-text);
            }
          }
        }
      }
    }

    &:last-of-type {
      max-width: @size-528;
      padding-right: var(--theme-gutter);
      grid-gap: @size-8;
      align-items: center;
      justify-content: flex-end;

      > div:first-of-type {
        grid-column: 2;
        grid-row: 1;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;

        > span {
          .text-16-bold;

          color: var(--inverted-primary-text);
          margin-right: @size-16;
          margin-left: @size-24;
          display: flex;
          align-items: center;

          > svg {
            width: @size-16;
            height: @size-16;
            margin-left: @size-4;
          }
        }
      }

      > div > button {
        // account button
        padding-left: @size-16;
        padding-right: @size-16;

        &:not(:disabled):focus {
          padding-left: @size-16;
          padding-right: @size-16;
        }
      }

      > button:first-of-type:first-of-type {
        margin-left: auto;
      }
    }
  }

  &.TwoTone > section:last-of-type {
    background: var(--primary-bg);
  }
}

@media @breakpoint-tiny {
  .TopNav {
    &.OnMarketsView {
      &.TwoTone > section:last-of-type {
        background: var(--secondary-bg);
      }
    }
    &.TwoTone > section:first-of-type {
      padding-left: @size-44;
    }
    &.TwoTone > section:last-of-type {
      width: @size-340;
      padding-right: @size-44;
    }
  }
}

@media @breakpoint-mobile-tablet {
  .TopNav {
    height: var(--theme-top-bar-height-mobile);
    min-height: var(--theme-top-bar-height-mobile);
    max-height: var(--theme-top-bar-height-mobile);

    > article:not([class*="Toast"]) {
      display: flex;

      > a:first-of-type {
        height: var(--theme-top-bar-height-mobile);
        width: @size-48;
        display: flex;
        align-items: center;
        justify-content: center;
      }

      > span {
        .text-12-semi-bold;

          color: var(--inverted-primary-text);
          display: flex;
          align-items: center;
          margin-left: auto;
          margin-right: @size-12;

          > svg {
            width: @size-12;
            height: @size-12;
            margin-left: @size-4;
          }
      }

      > button:first-of-type {
        background: transparent;
        border: 0;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
        border-right: @size-1 solid var(--secondary-text);
        border-left: @size-1 solid var(--secondary-text);
        height: var(--theme-top-bar-height-mobile);
        min-height: var(--theme-top-bar-height-mobile);
        max-height: var(--theme-top-bar-height-mobile);
        width: @size-48;
        min-width: @size-48;
        max-width: @size-48;
        position: relative;

        > p {
          .text-default;

          display: flex;
          flex-flow: row nowrap;
          align-items: center;
          justify-content: center;
          position: absolute;
          right: @size-2;
          top: @size-15;
          border-radius: @size-8;
          border: @size-1 solid var(--primary-text);
          background: var(--failed);
          color: var(--primary-bg);
          font-size: @size-8;
          font-weight: 500;
          line-height: @size-10;
          margin: 0;
          padding: 0 @size-3;
          min-width: @size-15;
          min-height: @size-14;
        }
      }

      > button[class*="BaseNormalButton"] {
        margin: 0 @size-12;

        > div {
          display: none;
        }
      }
    }

    > article[class*="Toast"] {
      .SecondaryBorderRadius;

      right: @size-16;
    }

    > section {
      display: none;
    }
  }
}

.SettingsMenuWrapper {
  position: relative;
  grid-column: 1;
  grid-row: 1;
  height: 100%;

  &.Open {
    > button {
      > svg > path {
        stroke: var(--tertiary-text);
        fill: var(--tertiary-text);
      }
    }

    @media @breakpoint-mobile-tablet {
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
      background: rgba(var(--primary-text-rgb), 0.65);

      > button {
        position: absolute;
        bottom: 0;
        right: 0;
      }
    }
  }

  > button {
    background-color: transparent;
    border: @size-1 solid rgba(var(--secondary-text-rgb), 0.5);
    border-bottom: 0;
    border-top: 0;
    border-radius: 0;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    min-height: @size-56;
    height: 100%;
    width: @size-56;
    min-width: @size-56;
    cursor: pointer;

    > svg > path {
      stroke: var(--inverted-primary-text);
      fill: var(--inverted-primary-text);
    }

    &:focus {
      outline: none;
    }

    &:hover,
    &:hover:not(:disabled) {
      > svg > path {
        stroke: var(--tertiary-text);
        fill: var(--tertiary-text);
      }
    }
  }
}

.SettingsMenu {
  .FixedBoxShadow;
  .ThemeBorder;
  .SecondaryBorderRadius;

  background: var(--primary-bg);
  position: absolute;
  right: 0;
  top: @size-68;
  max-width: @size-240;
  min-width: @size-240;
  display: flex;
  flex-flow: column nowrap;

  @media @breakpoint-mobile-tablet {
    top: 15vh;
    bottom: auto;
    right: var(--theme-gutter);
    left: var(--theme-gutter);
    max-width: unset;
    overflow-y: auto;
    max-height: 70vh;
  }

  > li {
    > label {
      .text-12-semi-bold;

      color: var(--primary-text);
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: space-between;
      background: var(--secondary-bg);
      padding: @size-12 @size-14;
      text-transform: uppercase;
      margin: 0;
    }

    &:not(:first-of-type) > label {
      border-top: @size-1 solid var(--theme-border);
    }

    > ul {
      display: flex;
      flex-flow: column nowrap;
      border-top: @size-1 solid var(--theme-border);

      > li {
        padding: 0 @size-12;

        &:not(:last-of-type):focus-within,
        &:focus-within {
          padding: 0;

          > button {
            border: @size-1 solid var(--theme-focus-border-color);
            border-bottom: @size-1 solid var(--theme-focus-border-color);
            padding: 0 @size-12;
          }
        }

        &:hover {
          background: var(--secondary-bg);

          > button {
            color: var(--primary-text);
          }
        }

        > button {
          .text-14;

          color: var(--secondary-text);
          border: 0;
          background: transparent;
          text-transform: capitalize;
          display: flex;
          flex-flow: row nowrap;
          justify-content: space-between;
          align-items: center;
          min-height: @size-44;
          max-height: @size-44;
          width: 100%;
          cursor: pointer;

          > svg {
            display: none;
          }

          &.Active {
            color: var(--primary-text);

            > svg {
              display: block;
              > path {
                fill: var(--primary-text);
              }
            }
          }
        }

        &:not(:last-of-type) > button {
          border-bottom: @size-1 solid var(--theme-border);
        }
      }
    }

    > div {
      border-top: @size-1 solid var(--theme-border);
      min-height: @size-44;
      max-height: @size-44;
      display: grid;
      grid-template-columns: auto auto 1fr;
      grid-gap: @size-4;
      padding: @size-8 @size-16;

      &.ThemeSelection {
        grid-template-columns: auto auto auto;
      }

      > button {
        .text-12-semi-bold;
        .ThemeBorder;

        background: transparent;
        color: var(--secondary-text);

        &.Active {
          border-color: var(--primary-text);
          color: var(--primary-text);
        }
      }
    }
  }

  & > :first-child {
    .SecondaryTopBorderRadius;

    & > :first-child {
      .SecondaryTopBorderRadius;
    }
  }

  & > :last-child {
    .SecondaryBottomBorderRadius;

    & > :last-child {
      .SecondaryBottomBorderRadius;
    }
  }
}

.Selected {
  background: var(--tertiary-bg);
}

.MobileMenuButton {
  max-width: @size-48;
  min-width: @size-48;
  width: @size-48;
  height: @size-48;
  min-height: @size-48;
  max-height: @size-48;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
  padding: none;
  background: transparent;
  border: 0;
  border-left: @size-1 solid var(--secondary-text);

  > svg {
    width: @size-20;
    height: @size-16;

    > path {
      fill: var(--inverted-primary-text);
    }
  }
}

:root[theme="SPORTS_DARK"] {
  @media @breakpoint-mobile-tablet {
    .TopNav > article:not([class*="Toast"]) > button:first-of-type {
      border-color: var(--theme-border);
    }
  }

  .SettingsMenuWrapper {
    > button {
      border-color: var(--theme-border);
    }
    &.Open {
      @media @breakpoint-mobile-tablet {
        background: rgba(var(--primary-bg-rgb), 0.9);
      }
    }
  }

  .MobileMenuButton {
    border-color: var(--theme-border);
  }

  .MobileMenu {
    > header,
    > main > ol,
    > footer {
      border-color: var(--theme-border);
    }
  }
}

.MobileMenu {
  background: var(--inverted-primary-bg);
  position: absolute;
  width: 100vw;
  height: 100vh;
  min-width: 100vw;
  min-height: 100vh;
  max-width: 100vw;
  max-height: 100vh;
  left: 100%;
  top: 0;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-rows: @size-64 1fr @size-64;

  &.Open {
    left: 0;

    > footer {
      left: 0;
    }
  }

  > header {
    height: @size-64;
    min-height: @size-64;
    max-height: @size-64;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: space-between;
    border-bottom: @size-1 solid var(--secondary-text);

    > a {
      height: @size-64;
      min-height: @size-64;
      max-height: @size-64;
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: center;

      > section {
        width: @size-120;

        > svg {
          height: @size-24;

          > g:first-of-type > path:not(:first-of-type) {
            fill: var(--color-brand-secondary);
          }
        }
      }
    }

    > button {
      height: @size-64;
      min-height: @size-64;
      max-height: @size-64;
      width: @size-64;
      min-width: @size-64;
      max-width: @size-64;
      border: 0;
      background: transparent;

      > svg {
        height: @size-12;
        width: @size-12;

        > path {
          fill: var(--inverted-primary-text);
        }
      }
    }
  }

  > main {
    padding: 0 @size-24;
    display: flex;
    flex-flow: column nowrap;
    overflow-y: auto;

    > ol {
      margin-top: @size-32;
      border-bottom: @size-1 dashed var(--secondary-text);
      display: flex;
      flex-flow: column nowrap;
      margin-bottom: @size-24;

      > li {
        margin-bottom: @size-24;

        > a {
          .text-20-bold;

          color: var(--tertiary-text);
        }

        &.Active > a {
          color: var(--inverted-primary-text);
        }
      }
    }

    > article[class*="CategoriesArea"] > article[class*="CategoryGroup"]:last-of-type {
      margin-bottom: @size-8;
    }
  }

  > footer {
    height: @size-64;
    min-height: @size-64;
    max-height: @size-64;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: flex-end;
    border-top: @size-1 solid var(--secondary-text);
    position: fixed;
    bottom: 0;
    width: 100vw;
    left: 100%;

    > div {
      > button {
        border-right: 0;
        min-width: @size-64;
        width: @size-64;
        max-width: @size-64;
        max-height: @size-64;
        height: @size-64;
      }
    }
  }
}

.CustomBetSizeInput {
  .ThemeBorder;
  .text-12-semi-bold;

  background: transparent;
  max-height: var(--tiny-button-height);
  padding: @size-4 @size-8;
  max-width: @size-76;
  color: var(--tertiary-text);
  transition: width 0.25s ease-in-out;
  text-align: right;

  &:focus {
    max-width: unset;
    transition: width 0.25s ease-in-out;
    color: var(--primary-text);
  }

  &.Active {
    border-color: var(--primary-text);
    color: var(--primary-text);
  }

  &.Error {
    border-color: var(--failed);
    color: var(--failed);
  }
}

.SportsAccountDetails {
  > div:first-of-type {
    // header
    max-height: @size-55;
    min-height: @size-55;
    height: @size-55;
    padding: 0 @size-22;

    > span {
      .text-16-bold;
    }

    > button {
      min-height: @size-24;
      min-width: @size-24;
      display: flex;
      align-items: center;
      justify-content: center;

      > svg {
        height: @size-16;
        width: @size-16;
      }
    }
  }

  > main > div > div {
    > section:first-of-type > div {
      background: var(--secondary-bg);

      > div:first-of-type > span:first-of-type {
        .text-14-bold;
      }

      > div:nth-of-type(2) > h3:last-of-type {
        .text-20-bold;

        color: var(--secondary-text);
      }

      > div:last-of-type {
        > button,
        > a {
          flex-flow: row-reverse nowrap;

          > svg {
            margin-left: 0;
            margin-right: @size-4;
          }
          &:not(:focus) {
            color: var(--primary-text);

            > svg {
              > path[fill],
              > g > path[fill] {
                fill: var(--primary-text);
              }

              > line,
              > path[stroke],
              > g > path[stroke] {
                stroke: var(--primary-text);
              }
            }

            &:not(:hover):not(:focus):not(:disabled):not(:active) {
              border-color: var(--tertiary-text);
            }
          }
        }
      }
    }

    > section:last-of-type {
      flex-flow: row wrap;

      > button:not(:focus) {
        color: var(--primary-text);

        > svg {
          > path[fill],
          > g > path[fill] {
            fill: var(--primary-text);
          }

          > line,
          > path[stroke],
          > g > path[stroke] {
            stroke: var(--primary-text);
          }
        }

        &:not(:disabled):not(:hover):not(:active):not(:focus) {
          border-color: var(--tertiary-text);
        }
      }
    }
  }
}
