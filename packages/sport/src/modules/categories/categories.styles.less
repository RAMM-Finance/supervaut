@import (reference) "~assets/styles/shared";

.CategoriesArea {
  min-width: 210px;
  margin-right: @size-40;

  > h2 {
    .text-20-bold;

    color: var(--primary-text);
    text-transform: uppercase;
    margin: 0;
    margin-bottom: @size-32;
    white-space: nowrap;
  }

  > h3 {
    .text-14-bold;

    color: var(--primary-text);
    text-transform: uppercase;
    margin: 0;
  }

  > button:not(:first-of-type) {
    margin-top: @size-12;
  }

  > article {
    &:first-of-type {
      margin-top: @size-12;
    }

    &:last-of-type {
      border-bottom: @size-1 solid var(--theme-border);
    }
  }
}

.RemoveCategoryButton {
  .text-12-semi-bold;

  align-items: center;
  display: flex;
  flex-flow: row nowrap;
  background: transparent;
  border: 0;
  color: var(--secondary-text);
  text-transform: uppercase;
  // to actually get alignment right.
  line-height: @size-14;
  cursor: pointer;

  &:hover {
    color: var(--primary-text);

    > span {
      border-color: var(--primary-text);
    }
  }

  > span {
    .PrimaryBorderRadius;

    background: var(--primary-bg);
    border: @size-1 solid var(--tertiary-text);
    height: @size-20;
    width: @size-20;
    margin-right: @size-8;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;

    > svg {
      height: @size-16;
      width: @size-10;
      transform: rotate(90deg);
      transform-origin: 50% 50%;

      > path {
        fill: var(--primary-text);
      }
    }
  }
}

.NumberBox {
  .text-10;
  .ThemeBorder;

  background: var(--primary-bg);
  color: var(--secondary-text);
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  line-height: @size-21;
  justify-content: center;
  padding: @size-4 @size-6;
  min-width: @size-25;
  height: @size-21;
  min-height: @size-21;
  max-height: @size-21;
  margin-left: auto;
}

.CategoryGroup {
  display: flex;
  flex-flow: column nowrap;

  > h4,
  > button {
    .text-12-semi-bold;
    .PrimaryBorderRadius;

    background: transparent;
    border: @size-1 solid transparent;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    line-height: @size-21;
    margin-bottom: @size-8;
    text-transform: uppercase;
    cursor: pointer;
    white-space: nowrap;
    padding: @size-2;

    > svg {
      height: @size-16;
      width: @size-16;
      margin-right: @size-8;

      > path[fill],
      > g > path[fill] {
        fill: var(--primary-text);
      }

      > line,
      > path[stroke],
      > g > path[stroke] {
        stroke: var(--primary-text);
      }
    }

    > span {
      .NumberBox;
    }

    &:focus {
      border: @size-1 solid var(--theme-focus-border-color);
    }

    &:hover {
      > span {
        border-color: var(--primary-text);
        color: var(--primary-text);
      }
    }

    &.SelectedCategory {
      color: var(--primary-text);

      > span {
        border-color: var(--primary-text);
        color: var(--primary-text);
      }
    }
  }

  > h4 {
    color: var(--primary-text);
  }

  > button {
    color: var(--secondary-text);

    &:hover {
      color: var(--primary-text);
    }
  }
}

.CategoriesArea.Inverted {
  margin-right: 0;

  > h2,
  > h3 {
    color: var(--inverted-primary-text);
  }
  > article:last-of-type {
    border-bottom: @size-1 dashed var(--secondary-text);
  }

  .RemoveCategoryButton {
    color: var(--secondary-text);

    &:hover {
      color: var(--primary-text);

      > span {
        border-color: var(--primary-text);
      }
    }

    > span {
      background: var(--primary-bg);
      border: @size-1 solid var(--tertiary-text);

      > svg {
        > path {
          fill: var(--primary-text);
        }
      }
    }
  }

  > article.CategoryGroup {
    > h4,
    > button {
      > svg {
        > path[fill],
        > g > path[fill] {
          fill: var(--tertiary-text);
        }

        > line,
        > path[stroke],
        > g > path[stroke] {
          stroke: var(--tertiary-text);
        }
      }

      > span {
        .NumberBox;

        border: @size-1 solid var(--secondary-text);
        background: var(--inverted-primary-bg);
        color: var(--inverted-primary-text);
      }

      &:hover {
        > span {
          border-color: var(--primary-bg);
          color: var(--primary-text);
        }
      }

      &.SelectedCategory {
        color: var(--inverted-primary-text);

        > span {
          background: var(--inverted-primary-text);
          border-color: var(--inverted-primary-text);
          color: var(--inverted-primary-bg);
        }

        > svg {
          > path[fill],
          > g > path[fill] {
            fill: var(--inverted-primary-text);
          }

          > line,
          > path[stroke],
          > g > path[stroke] {
            stroke: var(--inverted-primary-text);
          }
        }
      }
    }

    > h4 {
      color: var(--inverted-primary-text);
    }

    > button {
      color: var(--tertiary-text);

      &:hover {
        color: var(--inverted-primary-text);
      }
    }
  }
}

.CategoriesTrail {
  .text-10-semi-bold;

  color: var(--secondary-text);
  text-transform: uppercase;
  display: flex;
  flex-flow: row nowrap;
  min-height: @size-20;
  max-height: @size-20;
  align-items: center;
  justify-content: center;

  > span:not(:last-of-type) {
    margin-right: @size-4;
  }
}

.DailyLongSwitch {
  .PrimaryBorderRadius;

  display: flex;
  flex-flow: row nowrap;
  min-height: @size-40;
  max-height: @size-40;
  align-items: center;
  justify-content: center;

  > button {
    .text-14-bold;

    border: @size-1 solid var(--theme-border);
    background: var(--primary-bg);
    color: var(--secondary-text);
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    padding: @size-12 @size-24;
    min-height: @size-40;
    max-height: @size-40;
    cursor: pointer;
    white-space: nowrap;

    &.Selected {
      border-color: var(--primary-text);
      color: var(--primary-text);
    }

    &:first-of-type {
      .PrimaryLeftBorderRadius;
    }

    &:last-of-type {
      .PrimaryRightBorderRadius;
    }

    &:disabled {
      opacity: 0.95;
      cursor: not-allowed;
    }
  }
}

@media @breakpoint-mobile-tablet {
  .CategoriesArea:not(.Inverted) {
    display: none;
  }

  .DailyLongSwitch > button {
    padding: @size-12 @size-16;
  }
}
