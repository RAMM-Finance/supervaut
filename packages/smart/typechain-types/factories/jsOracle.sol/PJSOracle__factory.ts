/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  PJSOracle,
  PJSOracleInterface,
} from "../../jsOracle.sol/PJSOracle";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract CToken",
        name: "token",
        type: "address",
      },
    ],
    name: "getUnderlyingPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "isPriceOracle",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060dc8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806366331bba146037578063fc57d4df146053575b600080fd5b603e600181565b60405190151581526020015b60405180910390f35b606b605e3660046078565b50670de0b6b3a764000090565b604051908152602001604a565b600060208284031215608957600080fd5b81356001600160a01b0381168114609f57600080fd5b939250505056fea2646970667358221220430fcf5f70cd4be9a0a2fbd8fad687563bed53dae6039dda2080696bd48cd96264736f6c634300080a0033";

type PJSOracleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PJSOracleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PJSOracle__factory extends ContractFactory {
  constructor(...args: PJSOracleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PJSOracle> {
    return super.deploy(overrides || {}) as Promise<PJSOracle>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PJSOracle {
    return super.attach(address) as PJSOracle;
  }
  override connect(signer: Signer): PJSOracle__factory {
    return super.connect(signer) as PJSOracle__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PJSOracleInterface {
    return new utils.Interface(_abi) as PJSOracleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PJSOracle {
    return new Contract(address, _abi, signerOrProvider) as PJSOracle;
  }
}
