@import (reference) "~assets/styles/shared.less";

.Betslip {
  display: flex;
  flex-flow: column nowrap;
  flex: 1 100%;
  width: @betslip-column-width;

  > div {
    .SecondaryBorderRadius;

    background: var(--primary-bg);
    box-shadow: var(--theme-box-shadow);
    min-height: 440px;
    max-height: 85vh;
    border: @size-1 solid var(--theme-border);
    margin: @size-32 @size-32 @size-32 0;
    width: @betslip-width;
    position: fixed;
    display: flex;
    flex-flow: column nowrap;

    > button[class*="BaseNormalButton"] {
      display: none;
      position: absolute;
      right: @betslip-column-width + @size-18;
      transform: rotate(-90deg);
      transform-origin: right;
      border-bottom-left-radius: 0;
      border-bottom-right-radius: 0;

      > svg {
        height: @size-12;
        width: @size-12;
        transform: rotate(180deg);
        transform-origin: center;
      }

      &:not(:disabled) {
        background-color: var(--primary-text);
        border-color: var(--primary-text);
        color: var(--inverted-primary-text);

        > svg > path {
          fill: var(--inverted-primary-text);
        }
        &:hover,
        &:focus,
        &:active {
          background-color: var(--primary-text);
          border-color: var(--primary-text);
          color: var(--inverted-primary-text);

          > svg > path {
            fill: var(--inverted-primary-text);
          }
        }
      }
    }

    > main:not(.EmptyBetslip) {
      flex: 1;
    }

    > footer {
      border-top: @size-1 solid var(--theme-border);
      background: var(--secondary-bg);
      padding: @size-10 @size-12;
      display: grid;
      grid-gap: @size-12 @size-8;
      grid-template-columns: 1fr 1fr;

      > p {
        .text-12;

        color: var(--primary-text);
        grid-column: span 2;
        text-align: center;

        > b {
          .text-12-bold;
        }
      }

      > a {
        .text-10-semi-bold;

        color: var(--primary-text);
        grid-column: span 2;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        text-transform: uppercase;
        width: 100%;

        > svg {
          height: @size-16;
          width: @size-10;
          transform: rotate(-90deg);
          transform-origin: 50% 50%;
          margin-right: @size-8;

          > path {
            fill: var(--primary-text);
          }
        }
      }
    }

    > div.MobileBetslipButtonContainer {
      display: none;
    }

    > :last-child {
      .SecondaryBottomBorderRadius;
    }
  }
}

@media @breakpoint-mobile-tiny {
  .Betslip {
    position: absolute;
    left: 100%;
    z-index: @mask;
    height: 100vh;
    align-items: flex-end;

    > div > button[class*="BaseNormalButton"] {
      display: flex;
      right: @betslip-column-width + @size-18;
      top: @size-78;
    }

    &.Open {
      left: 0;
      right: 0;
      background: rgba(var(--primary-text-rgb), 0.4);
      width: 100vw;

      > div {
        > button {
          right: @betslip-width + @size-19;

          > svg {
            transform: rotate(0deg);
            transform-origin: center;
          }
        }
      }
    }

    > div {
      border: 0;
      border-radius: 0;
      margin: 0;
      height: 100%;
      max-height: 100vh;

      > :last-child {
        border-radius: 0;
      }
    }

    &.NavOpen {
      display: none;

      > div > div,
      > div > button[class*="BaseNormalButton"] {
        display: none;
      }
    }
  }
}

@media @breakpoint-mobile-tablet {
  .Betslip {
    > div {
      min-height: unset;
    }

    &.NavOpen > div > div.MobileBetslipButtonContainer {
      display: none;
    }
  }
}

@media @breakpoint-mobile {
  .Betslip {
    width: 100vw;

    > div {
      > button[class*="BaseNormalButton"] {
        display: none;
      }

      > div.MobileBetslipButtonContainer {
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
        position: absolute;
        max-width: 100vw;
        width: 100vw;
        min-width: 100vw;
        padding: @size-48 @size-12 @size-16;
        background: linear-gradient(180deg, rgba(var(--secondary-bg-rgb), 0) 0%, var(--secondary-bg) 67.29%);
        position: absolute;
        right: 100vw;
        bottom: 0;

        > button {
          flex: 1 100%;
        }
      }
    }

    &.Open > div {
      border: 0;
      width: 100vw;
    }

    &.NavOpen > div > div.MobileBetslipButtonContainer {
      display: none;
    }
  }
}

button.FlipContent {
  flex-flow: row-reverse nowrap;

  > svg:first-of-type,
  > div {
    margin-left: 0;
    margin-right: @size-4;
  }
}

.BetslipHeader {
  .SecondaryTopBorderRadius;

  background: var(--inverted-primary-bg);
  display: flex;
  flex-flow: row nowrap;
  width: 100%;
  flex: 1 100%;
  min-width: 100%;
  height: @size-48;
  min-height: @size-48;
  max-height: @size-48;

  > div {
    display: none;
  }

  > button {
    .text-14-semi-bold;

    background: transparent;
    color: var(--tertiary-text);
    border: none;
    display: flex;
    flex-flow: row nowrap;
    flex: 1 50%;
    text-transform: uppercase;
    justify-content: center;
    align-items: center;
    cursor: pointer;

    > span {
      .text-10;
      .PrimaryBorderRadius;

      border: @size-1 solid var(--tertiary-text);
      padding: @size-3 @size-5;
      margin-left: @size-8;
      color: var(--inverted-primary-text);
    }

    &.isPopulated {
      > span {
        color: var(--inverted-primary-text);
      }
    }

    &.SelectedView,
    &.SelectedView.isPopulated {
      color: var(--inverted-primary-text);

      > span {
        border: @size-1 solid var(--inverted-primary-text);
        background: var(--inverted-primary-text);
        color: var(--inverted-primary-bg);
      }
    }
  }

  @media @breakpoint-mobile-tiny {
    border-radius: 0;
  }

  @media @breakpoint-mobile-tablet {
    > div {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;
      justify-content: center;
      width: 100%;
      padding: 0 @size-12;

      > h2 {
        .text-16-bold;

        color: var(--inverted-primary-text);
        text-transform: capitalize;
        width: 100%;
        flex: 1 100%;
        text-align: center;
      }

      > button {
        border: 0;
        background: transparent;
        align-self: flex-end;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;
        height: 100%;
        width: @size-36;

        > svg {
          height: @size-16;
          width: @size-16;

          > path {
            fill: var(--inverted-primary-text);
          }
        }
      }
    }

    > button {
      display: none;
    }
  }
}

.EmptyBetslip {
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  margin-bottom: auto;

  > div {
    background: var(--secondary-bg);
    border-radius: 50%;
    margin-top: @size-80;
    margin-bottom: @size-16;
    height: @size-80;
    width: @size-80;
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;

    > svg {
      height: @size-40;
      width: @size-40;

      > g > path {
        stroke: var(--primary-text);
      }
    }
  }

  > h3 {
    .text-14-bold;

    color: var(--primary-text);
    margin: 0;
  }

  > p {
    .text-14;

    color: var(--primary-text);
    margin: 0;
    margin-top: @size-1;
    margin-bottom: @size-11;
  }
}

.BetslipContent {
  padding: @size-12;
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: stretch;
  overflow-y: auto;

  > article:not(:last-of-type) {
    margin-bottom: @size-8;
  }
}

.EditableBet {
  .ThemeBorder;
  .SecondaryBorderRadius;

  width: 100%;

  > header {
    .text-12-bold;
    .SecondaryTopBorderRadius;

    min-height: @size-30;
    background: var(--secondary-bg);
    color: var(--primary-text);
    border-bottom: @size-1 solid var(--theme-border);
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    padding: @size-8 @size-12;
  }

  > main {
    .SecondaryBottomBorderRadius;

    background: var(--primary-bg);
    padding: @size-12;
    display: grid;
    grid-template-columns: 1fr;
    grid-gap: @size-8;

    // heading area of content
    > div:first-of-type {
      display: flex;
      flex-flow: row nowrap;
      align-items: center;

      > h6 {
        .text-12-bold;

        color: var(--primary-text);
        margin: 0;
        padding: 0;
      }

      > span {
        .text-12-bold;

        color: var(--primary-text);
        padding: @size-1 @size-2;
        margin-left: auto;
      }

      > button {
        border: none;
        background: transparent;
        cursor: pointer;
        margin-left: @size-8;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        justify-content: center;

        > svg {
          height: @size-16;
          width: @size-15;

          > path {
            stroke: var(--secondary-text);
          }
        }

        &:hover {
          > svg > path {
            stroke: var(--primary-text);
          }
        }
      }
    }
  }
}

.EditableArea {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-gap: @size-8;
  margin-top: @size-6;
  align-items: center;
  justify-content: center;

  > span:last-of-type {
    .text-12;

    text-align: center;
    align-items: center;
    justify-content: center;
    display: flex;
    flex-flow: row nowrap;
    padding: 0;
    margin: 0;
    grid-column: span 2;
    color: var(--failed);
  }
}

.LabeledInput {
  .ThemeBorder;

  background: var(--primary-bg);
  display: flex;
  flex-flow: column nowrap;
  align-items: center;
  justify-content: center;
  position: relative;
  min-height: @size-36;
  height: @size-36;
  max-height: @size-36;
  position: relative;

  &:before {
    .text-14;

    color: var(--primary-text);
    content: "$";
    position: absolute;
    left: @size-4;
  }

  > span {
    .text-10-semi-bold;

    text-transform: uppercase;
    color: var(--secondary-text);
    padding: 0 @size-4;
    background: var(--primary-bg);
    position: absolute;
    display: flex;
    flex-flow: column nowrap;
    align-items: center;
    justify-content: center;
    top: -@size-6;
    min-height: @size-12;
    height: @size-12;
    max-height: @size-12;
  }

  > div,
  > input {
    .text-14;
    .PrimaryBorderRadius;

    border: 0;
    background: transparent;
    color: var(--primary-text);
    text-align: center;
    padding: @size-8 @size-12;
    min-height: @size-36;
    height: @size-36;
    max-height: @size-36;
    width: 100%;
    display: flex;
    align-items: center;
    justify-content: center;

    &:focus {
      outline: none;
    }
  }
}

// only make wager red on error
.Invalid:not(:last-of-type) {
  border-color: var(--failed);

  &:before {
    color: var(--failed);
  }

  > div,
  > input:not(:focus) {
    color: var(--failed);
  }

  > input:focus {
    border: none;
  }

  > span {
    color: var(--failed);
  }
}

.OddsChange {
  background: rgba(var(--warning-rgb), 0.15);

  &.isPositive {
    background: rgba(var(--success-rgb), 0.2);
  }
}

.OddsChangedMessage {
  .text-10-semi-bold;

  color: var(--primary-text);
  background: rgba(var(--warning-rgb), 0.15);
  border-top: @size-1 solid var(--theme-border);
  padding: @size-6 @size-12;
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: center;
}

.BetsChangedMessage {
  .OddsChangedMessage;

  &.isPositive {
    background: rgba(var(--success-rgb), 0.2);
  }
}

.BetReceipt {
  .EditableBet;

  &.Pending {
    > main > div:first-of-type > button {
      > svg {
        height: @size-16;
        width: @size-16;

        > path {
          stroke: var(--warning);
        }
      }

      &:hover > svg > path {
        stroke: var(--warning);
      }
    }
  }

  &.Confirmed {
    > main > div:first-of-type > button {
      cursor: default;

      > svg {
        width: @size-16;
        height: @size-16;

        > path {
          stroke: unset;
          fill: var(--success);
        }
      }

      &:hover {
        > svg > path {
          stroke: unset;
        }
      }
    }
  }

  &.Failed {
    > main {
      background: rgba(var(--failed-rgb), 0.15);

      > div:first-of-type > button {
        > svg > path {
          stroke: var(--failed);
        }

        &:hover > svg > path {
          stroke: var(--failed);
          stroke-width: 2px;
        }
      }

      > span {
        .text-12;
        display: flex;
        flex-flow: row nowrap;
        align-items: center;
        color: var(--failed);

        > button {
          .text-12-bold;

          border: none;
          background: none;
          color: var(--failed);
          margin-left: @size-4;
          cursor: pointer;

          &:focus {
            outline: none;
          }
        }
      }
    }
  }
}

.TicketBreakdown {
  display: grid;
  grid-gap: @size-4;
  width: 100%;

  > li {
    display: flex;
    flex-flow: row nowrap;
    align-items: baseline;

    > span {
      white-space: nowrap;

      &:first-of-type {
        .text-10-semi-bold;

        color: var(--secondary-text);
        text-transform: uppercase;
      }

      &:last-of-type {
        .text-12;

        color: var(--primary-text);
      }
    }

    > svg {
      margin: 0 @size-8;

      > line {
        .dashline-normal;
      }
    }
  }
}

.Cashout {
  display: flex;
  flex-flow: row nowrap;
  align-items: center;
  justify-content: flex-end;

  > a {
    .text-10-semi-bold;

    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    margin-right: auto;
    color: var(--primary-text);
    height: @size-20;
    min-height: @size-20;
    max-height: @size-20;

    > svg {
      height: @size-14;
      width: @size-14;
      margin-right: @size-4;

      > path {
        fill: var(--primary-text);
      }
    }
  }

  > button[class*="Tiny"] {
    .ThemeBorder;
    .text-10-semi-bold;

    background: transparent;
    padding: @size-3 @size-6;
    min-height: @size-20;
    max-height: @size-20;
    display: flex;
    flex-flow: row nowrap;
    align-items: center;
    justify-content: center;
    text-transform: uppercase;
    cursor: pointer;
    color: var(--primary-text);

    &:hover:not(:disabled) {
      border-color: var(--primary-text);
      background: var(--primary-text);
      color: var(--primary-bg);
    }

    &:disabled {
      opacity: 0.25;
    }
    &[class*="CanCashOut"] {
      &[class*="PositiveCashout"] {
        background: rgba(var(--success-rgb), 0.15);
        border-color: var(--success);
      }
      &[class*="NegativeCashout"] {
        background: rgba(var(--failed-rgb), 0.15);
        border-color: var(--failed);
      }

      &:hover:not(:disabled) {
        border-color: var(--primary-text);
        background: var(--primary-text);
        color: var(--primary-bg);
      }
    }

    &[class*="hasClaimed"] {
      opacity: 1;
      border: 0;

      > span:last-of-type {
        margin-right: @size-4;
        color: var(--primary-text);
      }

      > span:first-of-type {
        color: var(--primary-text);
      }

      &[class*="PositiveCashout"] {
        background: rgba(var(--success-rgb), 0.15);
      }

      &[class*="NegativeCashout"] {
        background: rgba(var(--failed-rgb), 0.15);
      }

      &:hover:not(:disabled) {
        border-color: var(--primary-text);
        background: var(--primary-text);
        color: var(--primary-bg);
      }
    }
  }
}

.animate {
  & :local {
    animation: move 2s linear infinite;
  }
}

@keyframes move {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
