{
  "address": "0xE36291Cb4A5e53a0c41eE4A1835a483fD22EB0e1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "_decimals",
          "type": "uint8"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_version",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "_answeredInRound",
          "type": "uint80"
        }
      ],
      "name": "addRound",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "description",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint80",
          "name": "roundId_",
          "type": "uint80"
        }
      ],
      "name": "getRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "_answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "latestRoundData",
      "outputs": [
        {
          "internalType": "uint80",
          "name": "_roundId",
          "type": "uint80"
        },
        {
          "internalType": "int256",
          "name": "_answer",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "_startedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_updatedAt",
          "type": "uint256"
        },
        {
          "internalType": "uint80",
          "name": "_answeredInRound",
          "type": "uint80"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9e3481c5c94cece3f2c56f9d2383712ce829782755948508fafa264341f69c04",
  "receipt": {
    "to": null,
    "from": "0x9063DaA3553C8d16172ecB38100EACc8d6212C22",
    "contractAddress": "0xE36291Cb4A5e53a0c41eE4A1835a483fD22EB0e1",
    "transactionIndex": 5,
    "gasUsed": "339863",
    "logsBloom": "0x
    "blockHash": "0x4f2e6cad93060f2f2fcd692b24868a312d5c9ed617df93ee04427dfc7224a55e",
    "transactionHash": "0x9e3481c5c94cece3f2c56f9d2383712ce829782755948508fafa264341f69c04",
    "logs": [],
    "blockNumber": 25792891,
    "cumulativeGasUsed": "624814",
    "status": 1,
    "byzantium": true
  },
  "args": [
    8,
    "DOT / USD",
    3
  ],
  "solcInputHash": "b3d07bfe64bbd838f4924e83ecbc4e2d",
  "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_answeredInRound\",\"type\":\"uint80\"}],\"name\":\"addRound\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId_\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"_answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/FakePriceFeed.sol\":\"FakePriceFeed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >=0.7.0;\\n\\ninterface AggregatorV3Interface {\\n\\n  function decimals() external view returns (uint8);\\n  function description() external view returns (string memory);\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n}\\n\",\"keccak256\":\"0x78af5c13ec137bdbb22ec9d65c730fb6f138d3a61a3fdbb63be4838ce7faf2a6\",\"license\":\"MIT\"},\"contracts/libraries/FakePriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.7.6;\\n\\nimport \\\"@chainlink/contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\\\";\\n\\ncontract FakePriceFeed is AggregatorV3Interface {\\n    uint8 decimals_;\\n    string description_;\\n    uint256 version_;\\n\\n    struct Round {\\n        uint80 roundId;\\n        int256 answer;\\n        uint256 startedAt;\\n        uint256 updatedAt;\\n        uint80 answeredInRound;\\n    }\\n    mapping(uint80 => Round) rounds;\\n    uint80 latestRoundId;\\n\\n    constructor(\\n        uint8 _decimals,\\n        string memory _description,\\n        uint256 _version\\n    ) {\\n        decimals_ = _decimals;\\n        description_ = _description;\\n        version_ = _version;\\n    }\\n\\n    function decimals() external view override returns (uint8) {\\n        return decimals_;\\n    }\\n\\n    function description() external view override returns (string memory) {\\n        return description_;\\n    }\\n\\n    function version() external view override returns (uint256) {\\n        return version_;\\n    }\\n\\n    // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n    // if they do not have data to report, instead of returning unset values\\n    // which could be misinterpreted as actual reported values.\\n    function getRoundData(uint80 roundId_)\\n        public\\n        view\\n        override\\n        returns (\\n            uint80 _roundId,\\n            int256 _answer,\\n            uint256 _startedAt,\\n            uint256 _updatedAt,\\n            uint80 _answeredInRound\\n        )\\n    {\\n        Round memory _round = rounds[roundId_];\\n        _roundId = _round.roundId;\\n        _answer = _round.answer;\\n        _startedAt = _round.startedAt;\\n        _updatedAt = _round.updatedAt;\\n        _answeredInRound = _round.answeredInRound;\\n    }\\n\\n    function latestRoundData()\\n        public\\n        view\\n        override\\n        returns (\\n            uint80 _roundId,\\n            int256 _answer,\\n            uint256 _startedAt,\\n            uint256 _updatedAt,\\n            uint80 _answeredInRound\\n        )\\n    {\\n        return getRoundData(latestRoundId);\\n    }\\n\\n    function addRound(\\n        uint80 _roundId,\\n        int256 _answer,\\n        uint256 _startedAt,\\n        uint256 _updatedAt,\\n        uint80 _answeredInRound\\n    ) external {\\n        rounds[_roundId] = Round(_roundId, _answer, _startedAt, _updatedAt, _answeredInRound);\\n        latestRoundId = _roundId;\\n    }\\n}\\n\",\"keccak256\":\"0xb803a171dfcc3b061725777e67957232b42f3ffbf21339dbb6f1cad0e6a8a9c6\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516105a23803806105a28339818101604052606081101561003357600080fd5b81516020830180516040519294929383019291908464010000000082111561005a57600080fd5b90830190602082018581111561006f57600080fd5b825164010000000081118282018810171561008957600080fd5b82525081516020918201929091019080838360005b838110156100b657818101518382015260200161009e565b50505050905090810190601f1680156100e35780820380516001836020036101000a031916815260200191505b506040526020908101516000805460ff191660ff88161790558451909350610111925060019185019061011d565b50600255506101be9050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826101535760008555610199565b82601f1061016c57805160ff1916838001178555610199565b82800160010185558215610199579182015b8281111561019957825182559160200191906001019061017e565b506101a59291506101a9565b5090565b5b808211156101a557600081556001016101aa565b6103d5806101cd6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063313ce5671461006757806354fd4d50146100855780637284e4161461009f5780639a6fc8f51461011c578063acfc72a414610186578063feaf968c146101ca575b600080fd5b61006f6101d2565b6040805160ff9092168252519081900360200190f35b61008d6101db565b60408051918252519081900360200190f35b6100a76101e1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101426004803603602081101561013257600080fd5b50356001600160501b0316610276565b60405180866001600160501b03168152602001858152602001848152602001838152602001826001600160501b031681526020019550505050505060405180910390f35b6101c8600480360360a081101561019c57600080fd5b506001600160501b038135811691602081013591604082013591606081013591608090910135166102db565b005b61014261036e565b60005460ff1690565b60025490565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b5050505050905090565b6001600160501b03908116600090815260036020818152604092839020835160a0810185528154861680825260018301549382018490526002830154958201869052938201546060820181905260049092015490951660809095018590529194909390565b6040805160a0810182526001600160501b03968716808252602080830197885282840196875260608301958652938816608083019081526000828152600395869052939093209151825490891669ffffffffffffffffffff199182161783559651600183015594516002820155925191830191909155516004918201805491909516908416179093558254909116179055565b600454600090819081908190819061038e906001600160501b0316610276565b94509450945094509450909192939456fea26469706673582212204da55b13f238029ea583b52168f3083ac50353d19ef95a3f11b4832e0258240064736f6c63430007060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c8063313ce5671461006757806354fd4d50146100855780637284e4161461009f5780639a6fc8f51461011c578063acfc72a414610186578063feaf968c146101ca575b600080fd5b61006f6101d2565b6040805160ff9092168252519081900360200190f35b61008d6101db565b60408051918252519081900360200190f35b6100a76101e1565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100e15781810151838201526020016100c9565b50505050905090810190601f16801561010e5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101426004803603602081101561013257600080fd5b50356001600160501b0316610276565b60405180866001600160501b03168152602001858152602001848152602001838152602001826001600160501b031681526020019550505050505060405180910390f35b6101c8600480360360a081101561019c57600080fd5b506001600160501b038135811691602081013591604082013591606081013591608090910135166102db565b005b61014261036e565b60005460ff1690565b60025490565b60018054604080516020601f6002600019610100878916150201909516949094049384018190048102820181019092528281526060939092909183018282801561026c5780601f106102415761010080835404028352916020019161026c565b820191906000526020600020905b81548152906001019060200180831161024f57829003601f168201915b5050505050905090565b6001600160501b03908116600090815260036020818152604092839020835160a0810185528154861680825260018301549382018490526002830154958201869052938201546060820181905260049092015490951660809095018590529194909390565b6040805160a0810182526001600160501b03968716808252602080830197885282840196875260608301958652938816608083019081526000828152600395869052939093209151825490891669ffffffffffffffffffff199182161783559651600183015594516002820155925191830191909155516004918201805491909516908416179093558254909116179055565b600454600090819081908190819061038e906001600160501b0316610276565b94509450945094509450909192939456fea26469706673582212204da55b13f238029ea583b52168f3083ac50353d19ef95a3f11b4832e0258240064736f6c63430007060033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5360,
        "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
        "label": "decimals_",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 5362,
        "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
        "label": "description_",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 5364,
        "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
        "label": "version_",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 5379,
        "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
        "label": "rounds",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint80,t_struct(Round)5375_storage)"
      },
      {
        "astId": 5381,
        "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
        "label": "latestRoundId",
        "offset": 0,
        "slot": "4",
        "type": "t_uint80"
      }
    ],
    "types": {
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_uint80,t_struct(Round)5375_storage)": {
        "encoding": "mapping",
        "key": "t_uint80",
        "label": "mapping(uint80 => struct FakePriceFeed.Round)",
        "numberOfBytes": "32",
        "value": "t_struct(Round)5375_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Round)5375_storage": {
        "encoding": "inplace",
        "label": "struct FakePriceFeed.Round",
        "members": [
          {
            "astId": 5366,
            "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
            "label": "roundId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint80"
          },
          {
            "astId": 5368,
            "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
            "label": "answer",
            "offset": 0,
            "slot": "1",
            "type": "t_int256"
          },
          {
            "astId": 5370,
            "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
            "label": "startedAt",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 5372,
            "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
            "label": "updatedAt",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 5374,
            "contract": "contracts/libraries/FakePriceFeed.sol:FakePriceFeed",
            "label": "answeredInRound",
            "offset": 0,
            "slot": "4",
            "type": "t_uint80"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      },
      "t_uint80": {
        "encoding": "inplace",
        "label": "uint80",
        "numberOfBytes": "10"
      }
    }
  }
}